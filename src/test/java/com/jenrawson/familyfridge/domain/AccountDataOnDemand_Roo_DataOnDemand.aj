// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.jenrawson.familyfridge.domain;

import com.jenrawson.familyfridge.domain.Account;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect AccountDataOnDemand_Roo_DataOnDemand {
    
    declare @type: AccountDataOnDemand: @Component;
    
    private Random AccountDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Account> AccountDataOnDemand.data;
    
    public Account AccountDataOnDemand.getNewTransientAccount(int index) {
        com.jenrawson.familyfridge.domain.Account obj = new com.jenrawson.familyfridge.domain.Account();
        obj.setOwner(null);
        return obj;
    }
    
    public Account AccountDataOnDemand.getSpecificAccount(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Account obj = data.get(index);
        return Account.findAccount(obj.getId());
    }
    
    public Account AccountDataOnDemand.getRandomAccount() {
        init();
        Account obj = data.get(rnd.nextInt(data.size()));
        return Account.findAccount(obj.getId());
    }
    
    public boolean AccountDataOnDemand.modifyAccount(Account obj) {
        return false;
    }
    
    public void AccountDataOnDemand.init() {
        data = com.jenrawson.familyfridge.domain.Account.findAccountEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Account' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.jenrawson.familyfridge.domain.Account>();
        for (int i = 0; i < 10; i++) {
            com.jenrawson.familyfridge.domain.Account obj = getNewTransientAccount(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
